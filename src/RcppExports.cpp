// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// check_is_xptr
void check_is_xptr(SEXP s);
RcppExport SEXP _ssdeepr_check_is_xptr(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type s(sSEXP);
    check_is_xptr(s);
    return R_NilValue;
END_RCPP
}
// is_null_xptr_
SEXP is_null_xptr_(SEXP s);
RcppExport SEXP _ssdeepr_is_null_xptr_(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(is_null_xptr_(s));
    return rcpp_result_gen;
END_RCPP
}
// int_fuzzy_context
SEXP int_fuzzy_context();
RcppExport SEXP _ssdeepr_int_fuzzy_context() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(int_fuzzy_context());
    return rcpp_result_gen;
END_RCPP
}
// int_fuzzy_update
SEXP int_fuzzy_update(SEXP sctx, std::vector < unsigned char > v);
RcppExport SEXP _ssdeepr_int_fuzzy_update(SEXP sctxSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type sctx(sctxSEXP);
    Rcpp::traits::input_parameter< std::vector < unsigned char > >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(int_fuzzy_update(sctx, v));
    return rcpp_result_gen;
END_RCPP
}
// int_fuzzy_digest
String int_fuzzy_digest(SEXP sctx);
RcppExport SEXP _ssdeepr_int_fuzzy_digest(SEXP sctxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type sctx(sctxSEXP);
    rcpp_result_gen = Rcpp::wrap(int_fuzzy_digest(sctx));
    return rcpp_result_gen;
END_RCPP
}
// int_hash_file
String int_hash_file(String path);
RcppExport SEXP _ssdeepr_int_hash_file(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type path(pathSEXP);
    rcpp_result_gen = Rcpp::wrap(int_hash_file(path));
    return rcpp_result_gen;
END_RCPP
}
// int_hash_buf
String int_hash_buf(std::vector < unsigned char > v);
RcppExport SEXP _ssdeepr_int_hash_buf(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector < unsigned char > >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(int_hash_buf(v));
    return rcpp_result_gen;
END_RCPP
}
// int_hash_cmp
IntegerVector int_hash_cmp(String h1, String h2);
RcppExport SEXP _ssdeepr_int_hash_cmp(SEXP h1SEXP, SEXP h2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type h1(h1SEXP);
    Rcpp::traits::input_parameter< String >::type h2(h2SEXP);
    rcpp_result_gen = Rcpp::wrap(int_hash_cmp(h1, h2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ssdeepr_check_is_xptr", (DL_FUNC) &_ssdeepr_check_is_xptr, 1},
    {"_ssdeepr_is_null_xptr_", (DL_FUNC) &_ssdeepr_is_null_xptr_, 1},
    {"_ssdeepr_int_fuzzy_context", (DL_FUNC) &_ssdeepr_int_fuzzy_context, 0},
    {"_ssdeepr_int_fuzzy_update", (DL_FUNC) &_ssdeepr_int_fuzzy_update, 2},
    {"_ssdeepr_int_fuzzy_digest", (DL_FUNC) &_ssdeepr_int_fuzzy_digest, 1},
    {"_ssdeepr_int_hash_file", (DL_FUNC) &_ssdeepr_int_hash_file, 1},
    {"_ssdeepr_int_hash_buf", (DL_FUNC) &_ssdeepr_int_hash_buf, 1},
    {"_ssdeepr_int_hash_cmp", (DL_FUNC) &_ssdeepr_int_hash_cmp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_ssdeepr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
